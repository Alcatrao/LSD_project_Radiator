library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;


entity Pulse_Clk_N is
	 generic(divFactor : positive := 50_000_000);
	 port(clkIn : in std_logic;
			--acel : in std_logic_vector(1 downto 0); --por fazer
			clkOut : out std_logic);
end Pulse_Clk_N;


architecture Behavioral of Pulse_Clk_N is

	 subtype TCounter is natural range 0 to divFactor - 1;
	 signal s_divCounter : TCounter := 0;
	 
begin
	 assert(divFactor >= 2);
	 
	 
	 process(clkIn)
	 begin
			if (rising_edge(clkIn)) then
				if (s_divCounter >= (divFactor - 1)) then
					clkOut <= '1';
					s_divCounter <= 0;
				else
					clkOut <= '0';
					s_divCounter <= s_divCounter + 1;
				end if;
			end if;
	  end process;
end Behavioral; 